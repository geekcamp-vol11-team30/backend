// Code generated by MockGen. DO NOT EDIT.
// Source: ./event.go

// Package mockcontroller is a generated GoMock package.
package mockcontroller

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockEventController is a mock of EventController interface.
type MockEventController struct {
	ctrl     *gomock.Controller
	recorder *MockEventControllerMockRecorder
}

// MockEventControllerMockRecorder is the mock recorder for MockEventController.
type MockEventControllerMockRecorder struct {
	mock *MockEventController
}

// NewMockEventController creates a new mock instance.
func NewMockEventController(ctrl *gomock.Controller) *MockEventController {
	mock := &MockEventController{ctrl: ctrl}
	mock.recorder = &MockEventControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEventController) EXPECT() *MockEventControllerMockRecorder {
	return m.recorder
}

// Attend mocks base method.
func (m *MockEventController) Attend(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Attend", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// Attend indicates an expected call of Attend.
func (mr *MockEventControllerMockRecorder) Attend(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Attend", reflect.TypeOf((*MockEventController)(nil).Attend), c)
}

// Create mocks base method.
func (m *MockEventController) Create(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockEventControllerMockRecorder) Create(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockEventController)(nil).Create), c)
}

// Retrieve mocks base method.
func (m *MockEventController) Retrieve(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Retrieve", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// Retrieve indicates an expected call of Retrieve.
func (mr *MockEventControllerMockRecorder) Retrieve(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Retrieve", reflect.TypeOf((*MockEventController)(nil).Retrieve), c)
}
