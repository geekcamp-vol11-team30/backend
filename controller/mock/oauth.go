// Code generated by MockGen. DO NOT EDIT.
// Source: ./oauth.go

// Package mockcontroller is a generated GoMock package.
package mockcontroller

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockOauthController is a mock of OauthController interface.
type MockOauthController struct {
	ctrl     *gomock.Controller
	recorder *MockOauthControllerMockRecorder
}

// MockOauthControllerMockRecorder is the mock recorder for MockOauthController.
type MockOauthControllerMockRecorder struct {
	mock *MockOauthController
}

// NewMockOauthController creates a new mock instance.
func NewMockOauthController(ctrl *gomock.Controller) *MockOauthController {
	mock := &MockOauthController{ctrl: ctrl}
	mock.recorder = &MockOauthControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOauthController) EXPECT() *MockOauthControllerMockRecorder {
	return m.recorder
}

// Callback mocks base method.
func (m *MockOauthController) Callback(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Callback", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// Callback indicates an expected call of Callback.
func (mr *MockOauthControllerMockRecorder) Callback(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Callback", reflect.TypeOf((*MockOauthController)(nil).Callback), c)
}

// RedirectToAuthPage mocks base method.
func (m *MockOauthController) RedirectToAuthPage(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RedirectToAuthPage", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// RedirectToAuthPage indicates an expected call of RedirectToAuthPage.
func (mr *MockOauthControllerMockRecorder) RedirectToAuthPage(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RedirectToAuthPage", reflect.TypeOf((*MockOauthController)(nil).RedirectToAuthPage), c)
}
