// Code generated by MockGen. DO NOT EDIT.
// Source: ./access_time.go

// Package mockmiddleware is a generated GoMock package.
package mockmiddleware

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockAccessTimeMiddleware is a mock of AccessTimeMiddleware interface.
type MockAccessTimeMiddleware struct {
	ctrl     *gomock.Controller
	recorder *MockAccessTimeMiddlewareMockRecorder
}

// MockAccessTimeMiddlewareMockRecorder is the mock recorder for MockAccessTimeMiddleware.
type MockAccessTimeMiddlewareMockRecorder struct {
	mock *MockAccessTimeMiddleware
}

// NewMockAccessTimeMiddleware creates a new mock instance.
func NewMockAccessTimeMiddleware(ctrl *gomock.Controller) *MockAccessTimeMiddleware {
	mock := &MockAccessTimeMiddleware{ctrl: ctrl}
	mock.recorder = &MockAccessTimeMiddlewareMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccessTimeMiddleware) EXPECT() *MockAccessTimeMiddlewareMockRecorder {
	return m.recorder
}

// Handler mocks base method.
func (m *MockAccessTimeMiddleware) Handler(next echo.HandlerFunc) echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Handler", next)
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// Handler indicates an expected call of Handler.
func (mr *MockAccessTimeMiddlewareMockRecorder) Handler(next interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handler", reflect.TypeOf((*MockAccessTimeMiddleware)(nil).Handler), next)
}
