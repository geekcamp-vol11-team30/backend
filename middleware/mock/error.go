// Code generated by MockGen. DO NOT EDIT.
// Source: ./error.go

// Package mockmiddleware is a generated GoMock package.
package mockmiddleware

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockErrorMiddleware is a mock of ErrorMiddleware interface.
type MockErrorMiddleware struct {
	ctrl     *gomock.Controller
	recorder *MockErrorMiddlewareMockRecorder
}

// MockErrorMiddlewareMockRecorder is the mock recorder for MockErrorMiddleware.
type MockErrorMiddlewareMockRecorder struct {
	mock *MockErrorMiddleware
}

// NewMockErrorMiddleware creates a new mock instance.
func NewMockErrorMiddleware(ctrl *gomock.Controller) *MockErrorMiddleware {
	mock := &MockErrorMiddleware{ctrl: ctrl}
	mock.recorder = &MockErrorMiddlewareMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockErrorMiddleware) EXPECT() *MockErrorMiddlewareMockRecorder {
	return m.recorder
}

// ErrorHandler mocks base method.
func (m *MockErrorMiddleware) ErrorHandler(next echo.HandlerFunc) echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ErrorHandler", next)
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// ErrorHandler indicates an expected call of ErrorHandler.
func (mr *MockErrorMiddlewareMockRecorder) ErrorHandler(next interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ErrorHandler", reflect.TypeOf((*MockErrorMiddleware)(nil).ErrorHandler), next)
}
